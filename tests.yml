# va/error:
#  command: intentionalFailure
#  description: Intentional Failure. Uncomment to test CI system failure behavior.

# TODO: These can be removed once the DevShop deploy task runs the install task before it runs the deploy hooks.
va/deploy/0-composer:
  description: Composer Install
  about: Using --dev is actually the default. Putting it here to make it clear this is the way composer should be run right now.
  # Removing va-gov/web here because composer won't update it, we think... needs more testing.
  command: rm -rf ./docroot/vendor/va-gov/web && composer install --dev --no-interaction --no-progress --ansi

va/deploy/1-cache:
  description: Rebuild Drupal caches
  command: drush $DRUSH_ALIAS cr

va/deploy/2-update:
  description: Run Drupal Update Hooks
  command: drush $DRUSH_ALIAS updatedb --yes

va/deploy/3-config:
  - drush $DRUSH_ALIAS cim --yes
  - drush $DRUSH_ALIAS cr

va/tests/graphql:
  description: Verify GraphQL Endpoint Test | Count how many times
  # Loop through the curl command, print how long it takes, the response, and the number of times it ran on the last line.
  command: echo "Curl and curl again until JSON data comes through."

va/tests/graphql-workaround:
  description: Fail when Number of times curl has to run is more than 1.
  command: echo "If the va/tests/graphql "
  ignore_failure: true

va/tests/graphql-cache:
  description: Confirm GraphQL loads again faster after first request.
  command: echo "Curl graphQL again, confirm JSON again. (Output time so we can see caching improvements)"

# At this point, the va:web:build command should work, because the next GraphQL request should be good.

# Test-Driven Development: Break the build!
va/tests/graphql-error:
  description: "Reproduce the GraphQL Error: Clear cache, curl, fail when 200 and empty response."
  command: "This command should fail if curl on GraphQL is !200 or is 200 and empty response."

va/tests/phpcs:
  description: PHP CodeSniffer
  command: composer va:test:cs

va/tests/phplint:
  description: PHP Lint
  command: composer va:test:lint

va/tests/phpunit:
  description: PHPUnit
  command: phpunit --exclude-group disabled tests/phpunit --colors=always

va/web/build:
  description: Build VA.gov Front-end
  # Right now, va:web:build command does not fire an exit code, so we are using
  # GREP to look for the error message from WEB "Failed to pipe Drupal content into Metalsmith!"
  # @TODO: Remove once the WEB project is able to fail properly EVERY time: https://va-gov.atlassian.net/browse/VAGOV-5481
  # @TODO: Find this error message in WEB! This is where we can fail the build.
  command: composer va:web:build

va/tests/behat:
  description: Behat Tests
  command: |
    cd tests/behat
    behat --colors
